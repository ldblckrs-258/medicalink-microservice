name: Manual Deploy All Services

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy (leave empty for latest staging)'
        required: false
        type: string
        default: ''
      force_rebuild:
        description: 'Force rebuild all images even if no changes'
        required: false
        type: boolean
        default: true
      services:
        description: 'Select services to deploy (comma-separated, leave empty for all)'
        required: false
        type: string
        default: ''

env:
  GITHUB_OWNER: ${{ github.repository_owner }}
  IMAGE_TAG: ${{ github.event.inputs.image_tag || format('staging-{0}', github.sha) }}

jobs:
  build-services:
    if: github.event.inputs.force_rebuild == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: 
          - accounts-service
          - api-gateway
          - booking-service
          - content-service
          - notification-service
          - orchestrator-service
          - provider-service
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push ${{ matrix.service }}
        uses: ./.github/workflows/build-and-push.yml
        with:
          service: ${{ matrix.service }}
          image_tag: ${{ env.IMAGE_TAG }}

  deploy-services:
    needs: build-services
    if: always() && (needs.build-services.result == 'success' || needs.build-services.result == 'skipped')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - accounts-service
          - api-gateway
          - booking-service
          - content-service
          - notification-service
          - orchestrator-service
          - provider-service
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: |
          chmod +x scripts/detect-changes.sh
          chmod +x scripts/deploy-to-vm.sh

      - name: Deploy ${{ matrix.service }} to VM
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
          VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 Deploying ${{ matrix.service }} with image tag: ${{ env.IMAGE_TAG }}"
          ./scripts/deploy-to-vm.sh ${{ matrix.service }} ${{ env.IMAGE_TAG }}

      - name: Deployment Summary
        run: |
          echo "## 🎯 Service Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service**: ${{ matrix.service }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tag**: ${{ env.IMAGE_TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "**Force Rebuild**: ${{ github.event.inputs.force_rebuild }}" >> $GITHUB_STEP_SUMMARY
          echo "**VM**: ${{ secrets.VM_HOST }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Full Image Name**: ghcr.io/${{ env.GITHUB_OWNER }}/medicalink-${{ matrix.service }}:${{ env.IMAGE_TAG }}" >> $GITHUB_STEP_SUMMARY

  notify-completion:
    needs: [build-services, deploy-services]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Final Summary
        run: |
          echo "## 🚀 Manual Deploy All Services Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.deploy-services.result }}" = "success" ]; then
            echo "✅ **All Services Deployed Successfully**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All selected services have been successfully deployed to the staging environment." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some Deployments Failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Some service deployments failed. Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Services**: All services" >> $GITHUB_STEP_SUMMARY
          echo "- **Image Tag**: ${{ env.IMAGE_TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Force Rebuild**: ${{ github.event.inputs.force_rebuild }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status**: ${{ needs.build-services.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deploy Status**: ${{ needs.deploy-services.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY