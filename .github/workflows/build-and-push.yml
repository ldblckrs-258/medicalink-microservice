name: Build and Push Docker Images

on:
  workflow_call:
    inputs:
      service:
        description: 'Service name to build'
        required: true
        type: string
      image_tag:
        description: 'Image tag to use'
        required: true
        type: string
      registry:
        description: 'Container registry to push to'
        required: false
        type: string
        default: 'ghcr.io'
    outputs:
      image_name:
        description: 'Full image name with tag'
        value: ${{ jobs.build-and-push.outputs.image_name }}
      image_digest:
        description: 'Image digest'
        value: ${{ jobs.build-and-push.outputs.image_digest }}

env:
  REGISTRY: ${{ inputs.registry }}
  GITHUB_OWNER: ${{ github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_name: ${{ steps.set-outputs.outputs.image_name }}
      image_digest: ${{ steps.set-outputs.outputs.image_digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.GITHUB_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.GITHUB_OWNER }}/medicalink-${{ inputs.service }}
          tags: |
            type=raw,value=${{ inputs.image_tag }}
            type=raw,value=${{ inputs.image_tag }}-{{sha}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ inputs.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Set outputs
        id: set-outputs
        run: |
          echo "image_name=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT
          echo "image_digest=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

      - name: Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ inputs.service }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Digest**: ${{ steps.build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY